{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sunilkumara.v.j\\\\Desktop\\\\NextjsSanity\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  allSanityBeerProducts {\\n    edges {\\n      node {\\n        _id\\n        price\\n        title\\n        description\\n        image {\\n          asset {\\n            url\\n          }\\n        }\\n        slug {\\n          current\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport withApollo from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/apollo/withApollo.js'; // import { getDataFromTree } from '@apollo/react-ssr';\n\nvar QUERY = gql(_templateObject());\n\nvar Index = function Index() {\n  var _useQuery = useQuery(QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading || !data) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, data.title);\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/pages/index.js"],"names":["gql","useQuery","withApollo","QUERY","Index","loading","data","title"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,oEAAvB,C,CACA;;AAEA,IAAMC,KAAK,GAAGH,GAAH,mBAAX;;AAuBA,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACQH,QAAQ,CAACE,KAAD,CADhB;AAAA,MACVE,OADU,aACVA,OADU;AAAA,MACDC,IADC,aACDA,IADC;;AAGlB,MAAID,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CAAP;AACD,CAPD;;AASA,eAAeL,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport withApollo from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/apollo/withApollo.js';\r\n// import { getDataFromTree } from '@apollo/react-ssr';\r\n\r\nconst QUERY = gql`\r\n{\r\n  allSanityBeerProducts {\r\n    edges {\r\n      node {\r\n        _id\r\n        price\r\n        title\r\n        description\r\n        image {\r\n          asset {\r\n            url\r\n          }\r\n        }\r\n        slug {\r\n          current\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data } = useQuery(QUERY);\r\n\r\n  if (loading || !data) {\r\n    return <h1>loading...</h1>;\r\n  }\r\n  return <h1>{data.title}</h1>;\r\n};\r\n\r\nexport default withApollo(Index);"]},"metadata":{},"sourceType":"module"}