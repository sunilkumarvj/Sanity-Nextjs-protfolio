{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sunilkumara.v.j\\\\Desktop\\\\NextjsSanity\\\\pages\\\\post\\\\[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"beerProducts\\\" && slug.current == $slug]{\\n  price,\\n  title,\\n  description,\\n  image,\\n  \\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport client from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/client.js';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Post = function Post(props) {\n  var title = props.title,\n      price = props.price,\n      description = props.description,\n      image = props.image;\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Posted in\", props.map(function (u) {\n    return __jsx(\"li\", {\n      key: t,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }, t);\n  })), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, description), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, price), __jsx(\"img\", {\n    src: urlFor(image).width(50).url(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar query = groq(_templateObject());\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // It's important to default the slug so that it doesn't return \"undefined\"\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(query, {\n            slug: slug\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","client","urlFor","source","image","Post","props","title","price","description","map","u","t","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,yDAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MAEpBC,KAFoB,GAMlBD,KANkB,CAEpBC,KAFoB;AAAA,MAGpBC,KAHoB,GAMlBF,KANkB,CAGpBE,KAHoB;AAAA,MAIpBC,WAJoB,GAMlBH,KANkB,CAIpBG,WAJoB;AAAA,MAKpBL,KALoB,GAMlBE,KANkB,CAKpBF,KALoB;AAOtB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEKE,KAAK,CAACI,GAAN,CAAU,UAACC,CAAD;AAAA,WAAO;AAAI,MAAA,GAAG,EAAEC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaA,CAAb,CAAP;AAAA,GAAV,CAFL,CAFF,EAMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,WAAL,CANE,EAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CAPE,EAQF;AACU,IAAA,GAAG,EAAEN,MAAM,CAACE,KAAD,CAAN,CACFS,KADE,CACI,EADJ,EAEFC,GAFE,EADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARE,CADF;AAgBD,CAvBD;;AAyBA,IAAMC,KAAK,GAAGhB,IAAH,mBAAX;;AAQAM,IAAI,CAACW,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,gCAECA,OAAO,CAACF,KAFT,CAEbG,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,2CAGRjB,MAAM,CAACkB,KAAP,CAAaJ,KAAb,EAAoB;AAC/BG,YAAAA,IAAI,EAAJA;AAD+B,WAApB,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeb,IAAf","sourcesContent":["import groq from 'groq'\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport client from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/client.js'\r\n\r\nfunction urlFor (source) {\r\n  return imageUrlBuilder(client).image(source)\r\n}\r\n\r\nconst Post = (props) => {\r\n  const {\r\n    title,\r\n    price,\r\n    description,\r\n    image\r\n  } = props\r\n  return (\r\n    <article>\r\n      \r\n      <ul>\r\n          Posted in\r\n          {props.map((u) => <li key={t}>{t}</li>)}\r\n        </ul>\r\n  <h1>{description}</h1>\r\n  <h1>{price}</h1>\r\n  <img\r\n            src={urlFor(image)\r\n              .width(50)\r\n              .url()}\r\n          />\r\n    </article>\r\n  )\r\n}\r\n\r\nconst query = groq`*[_type == \"beerProducts\" && slug.current == $slug]{\r\n  price,\r\n  title,\r\n  description,\r\n  image,\r\n  \r\n}`\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query\r\n  return await client.fetch(query, {\r\n    slug\r\n  })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}