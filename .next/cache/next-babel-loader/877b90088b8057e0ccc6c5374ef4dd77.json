{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunilkumara.v.j\\\\Desktop\\\\NextjsSanity\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport client from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/client.js';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title,\n    price,\n    description,\n    image\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Posted in\", props.map((u, v) => __jsx(\"li\", {\n    key: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 31\n    }\n  }, u.title))), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, description), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, price), __jsx(\"img\", {\n    src: urlFor(image).width(50).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }));\n};\n\nconst query = groq`*[_type == \"beerProducts\" && slug.current == $slug]{\n  price,\n  title,\n  description,\n  image,\n  \n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","client","urlFor","source","image","Post","props","title","price","description","map","u","v","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,yDAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAHI;AAIJL,IAAAA;AAJI,MAKFE,KALJ;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEKA,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,CAAC,CAACJ,KAAf,CAAnB,CAFL,CAFF,EAMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,WAAL,CANE,EAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CAPE,EAQF;AACU,IAAA,GAAG,EAAEN,MAAM,CAACE,KAAD,CAAN,CACFS,KADE,CACI,EADJ,EAEFC,GAFE,EADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARE,CADF;AAgBD,CAvBD;;AAyBA,MAAMC,KAAK,GAAGhB,IAAK;;;;;;EAAnB;;AAQAM,IAAI,CAACW,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMd,MAAM,CAACkB,KAAP,CAAaJ,KAAb,EAAoB;AAC/BG,IAAAA;AAD+B,GAApB,CAAb;AAGD,CAND;;AAQA,eAAeb,IAAf","sourcesContent":["import groq from 'groq'\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport client from 'C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/client.js'\r\n\r\nfunction urlFor (source) {\r\n  return imageUrlBuilder(client).image(source)\r\n}\r\n\r\nconst Post = (props) => {\r\n  const {\r\n    title,\r\n    price,\r\n    description,\r\n    image\r\n  } = props\r\n  return (\r\n    <article>\r\n      \r\n      <ul>\r\n          Posted in\r\n          {props.map((u,v) => <li key={v}>{u.title}</li>)}\r\n        </ul>\r\n  <h1>{description}</h1>\r\n  <h1>{price}</h1>\r\n  <img\r\n            src={urlFor(image)\r\n              .width(50)\r\n              .url()}\r\n          />\r\n    </article>\r\n  )\r\n}\r\n\r\nconst query = groq`*[_type == \"beerProducts\" && slug.current == $slug]{\r\n  price,\r\n  title,\r\n  description,\r\n  image,\r\n  \r\n}`\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query\r\n  return await client.fetch(query, {\r\n    slug\r\n  })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}