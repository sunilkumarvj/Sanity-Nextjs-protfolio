{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunilkumara.v.j\\\\Desktop\\\\NextjsSanity\\\\pages\\\\Products.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n      allSanityBeerProducts {\\n        edges {\\n          node {\\n            _id\\n            price\\n            title\\n            description\\n            image {\\n            \\n              asset {\\n                url\\n              }\\n            }\\n            slug {\\n              current\\n            }\\n          }\\n        }\\n      }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport fetch from 'node-fetch';\nimport 'cross-fetch/polyfill';\nimport { createHttpLink } from 'apollo-link-http';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport './Products.css';\nvar client = new ApolloClient({\n  uri: 'http://localhost:8001/__graphql'\n});\nexport default function Products() {\n  var _this = this;\n\n  var _useQuery = useQuery(gql(_templateObject())),\n      client = _useQuery.client,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  return __jsx(\"div\", {\n    className: \"mainprodp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), data.allSanityBeerProducts.edges.map(function (_ref) {\n    var project = _ref.node;\n    return __jsx(\"div\", {\n      className: \"s1\",\n      key: project.slug.current,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      className: \"imgbeers\",\n      src: project.image.asset.url,\n      alt: project.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }), __jsx(\"div\", {\n      className: \"bttn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }, \" \", __jsx(\"button\", {\n      className: \"buy-button snipcart-add-item\",\n      \"data-item-id\": project._id,\n      \"data-item-price\": \"100\",\n      \"data-item-name\": project.title,\n      \"data-item-image\": project.image.asset.url,\n      \"data-item-description\": project.description,\n      \"data-item-custom1-name\": \"Quantity\",\n      \"data-item-custom1-options\": \"60ml|90ml[+100.00]|Full[+300.00]\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }\n    }, \"Add Item\")), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 65\n      }\n    })), __jsx(\"div\", {\n      className: \"desc\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 40\n      }\n    }, \"Title:\"), \" \", project.title), __jsx(\"div\", {\n      className: \"price clayer-price\",\n      \"data-sku-code\": \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 71\n      }\n    }, \"Price:\"), \" \", __jsx(\"span\", {\n      \"class\": \"amount\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 85\n      }\n    })), __jsx(\"div\", {\n      className: \"description\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 46\n      }\n    }, \"Description:\"), \" \", project.description)));\n  }));\n}","map":{"version":3,"sources":["C:/Users/sunilkumara.v.j/Desktop/NextjsSanity/pages/Products.js"],"names":["React","render","fetch","createHttpLink","ApolloClient","ApolloProvider","useQuery","gql","client","uri","Products","loading","error","data","allSanityBeerProducts","edges","map","project","node","slug","current","image","asset","url","title","_id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport fetch from 'node-fetch';\r\nimport 'cross-fetch/polyfill';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport './Products.css'\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:8001/__graphql',\r\n});\r\n\r\nexport default function Products() {\r\n  \r\n    const { client, loading, error, data } = useQuery(gql`\r\n    {\r\n      allSanityBeerProducts {\r\n        edges {\r\n          node {\r\n            _id\r\n            price\r\n            title\r\n            description\r\n            image {\r\n            \r\n              asset {\r\n                url\r\n              }\r\n            }\r\n            slug {\r\n              current\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `);\r\n   \r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n      \r\n    return <div className=\"mainprodp\">\r\n    <ApolloProvider client={client}></ApolloProvider>\r\n    {data.allSanityBeerProducts.edges.map(({node: project}) => (\r\n      \r\n      <div className=\"s1\" key={project.slug.current}>\r\n        \r\n         <img className=\"imgbeers\" src={project.image.asset.url} alt={project.title}></img>\r\n         <div className=\"bttn\"> <button  className=\"buy-button snipcart-add-item\" data-item-id={project._id} \r\n                                 data-item-price=\"100\" \r\n                                 \r\n                                 data-item-name={project.title} \r\n                                 data-item-image={project.image.asset.url}\r\n                                 data-item-description={project.description}\r\n                                 data-item-custom1-name=\"Quantity\"\r\n                                 data-item-custom1-options=\"60ml|90ml[+100.00]|Full[+300.00]\"\r\n                                 ><span>Add Item</span></button><br /></div>\r\n            <div className=\"desc\">\r\n                <div className=\"title\"><b>Title:</b> {project.title}</div>\r\n                <div className=\"price clayer-price\" data-sku-code=\"1\"><b>Price:</b> <span class=\"amount\"></span></div>\r\n                <div className=\"description\"><b>Description:</b> {project.description}</div>\r\n\r\n                                 \r\n          </div>\r\n\r\n    </div>\r\n\r\n\r\n  \r\n        \r\n    ))\r\n    \r\n    }\r\n\r\n\r\n</div>\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}